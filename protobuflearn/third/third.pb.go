// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: third.proto

package third

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NullableTimestamp *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=nullableTimestamp,proto3" json:"nullableTimestamp,omitempty"`
	NullableDuration  *durationpb.Duration    `protobuf:"bytes,2,opt,name=nullableDuration,proto3" json:"nullableDuration,omitempty"`
	NullableDouble    *wrapperspb.DoubleValue `protobuf:"bytes,3,opt,name=nullableDouble,proto3" json:"nullableDouble,omitempty"`
	NullableFloat     *wrapperspb.FloatValue  `protobuf:"bytes,4,opt,name=nullableFloat,proto3" json:"nullableFloat,omitempty"`
	NullableInt64     *wrapperspb.Int64Value  `protobuf:"bytes,5,opt,name=nullableInt64,proto3" json:"nullableInt64,omitempty"`
	NullableUInt64    *wrapperspb.UInt64Value `protobuf:"bytes,6,opt,name=nullableUInt64,proto3" json:"nullableUInt64,omitempty"`
	NullableInt32     *wrapperspb.Int32Value  `protobuf:"bytes,7,opt,name=nullableInt32,proto3" json:"nullableInt32,omitempty"`
	NullableUInt32    *wrapperspb.UInt32Value `protobuf:"bytes,8,opt,name=nullableUInt32,proto3" json:"nullableUInt32,omitempty"`
	NullableBool      *wrapperspb.BoolValue   `protobuf:"bytes,9,opt,name=nullableBool,proto3" json:"nullableBool,omitempty"`
	NullableString    *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=nullableString,proto3" json:"nullableString,omitempty"`
	NullableBytes     *wrapperspb.BytesValue  `protobuf:"bytes,11,opt,name=nullableBytes,proto3" json:"nullableBytes,omitempty"`
	Timestamp         *timestamppb.Timestamp  `protobuf:"bytes,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Duration          *durationpb.Duration    `protobuf:"bytes,13,opt,name=duration,proto3" json:"duration,omitempty"`
	NonnullDouble     *wrapperspb.DoubleValue `protobuf:"bytes,14,opt,name=nonnullDouble,proto3" json:"nonnullDouble,omitempty"`
	NonnullFloat      *wrapperspb.FloatValue  `protobuf:"bytes,15,opt,name=nonnullFloat,proto3" json:"nonnullFloat,omitempty"`
	NonnullInt64      *wrapperspb.Int64Value  `protobuf:"bytes,16,opt,name=nonnullInt64,proto3" json:"nonnullInt64,omitempty"`
	NonnullUInt64     *wrapperspb.UInt64Value `protobuf:"bytes,17,opt,name=nonnullUInt64,proto3" json:"nonnullUInt64,omitempty"`
	NonnullInt32      *wrapperspb.Int32Value  `protobuf:"bytes,18,opt,name=nonnullInt32,proto3" json:"nonnullInt32,omitempty"`
	NonnullUInt32     *wrapperspb.UInt32Value `protobuf:"bytes,19,opt,name=nonnullUInt32,proto3" json:"nonnullUInt32,omitempty"`
	NonnullBool       *wrapperspb.BoolValue   `protobuf:"bytes,20,opt,name=nonnullBool,proto3" json:"nonnullBool,omitempty"`
	NonnullString     *wrapperspb.StringValue `protobuf:"bytes,21,opt,name=nonnullString,proto3" json:"nonnullString,omitempty"`
	NonnullBytes      *wrapperspb.BytesValue  `protobuf:"bytes,22,opt,name=nonnullBytes,proto3" json:"nonnullBytes,omitempty"`
}

func (x *ProtoTypes) Reset() {
	*x = ProtoTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTypes) ProtoMessage() {}

func (x *ProtoTypes) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTypes.ProtoReflect.Descriptor instead.
func (*ProtoTypes) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoTypes) GetNullableTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.NullableTimestamp
	}
	return nil
}

func (x *ProtoTypes) GetNullableDuration() *durationpb.Duration {
	if x != nil {
		return x.NullableDuration
	}
	return nil
}

func (x *ProtoTypes) GetNullableDouble() *wrapperspb.DoubleValue {
	if x != nil {
		return x.NullableDouble
	}
	return nil
}

func (x *ProtoTypes) GetNullableFloat() *wrapperspb.FloatValue {
	if x != nil {
		return x.NullableFloat
	}
	return nil
}

func (x *ProtoTypes) GetNullableInt64() *wrapperspb.Int64Value {
	if x != nil {
		return x.NullableInt64
	}
	return nil
}

func (x *ProtoTypes) GetNullableUInt64() *wrapperspb.UInt64Value {
	if x != nil {
		return x.NullableUInt64
	}
	return nil
}

func (x *ProtoTypes) GetNullableInt32() *wrapperspb.Int32Value {
	if x != nil {
		return x.NullableInt32
	}
	return nil
}

func (x *ProtoTypes) GetNullableUInt32() *wrapperspb.UInt32Value {
	if x != nil {
		return x.NullableUInt32
	}
	return nil
}

func (x *ProtoTypes) GetNullableBool() *wrapperspb.BoolValue {
	if x != nil {
		return x.NullableBool
	}
	return nil
}

func (x *ProtoTypes) GetNullableString() *wrapperspb.StringValue {
	if x != nil {
		return x.NullableString
	}
	return nil
}

func (x *ProtoTypes) GetNullableBytes() *wrapperspb.BytesValue {
	if x != nil {
		return x.NullableBytes
	}
	return nil
}

func (x *ProtoTypes) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProtoTypes) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *ProtoTypes) GetNonnullDouble() *wrapperspb.DoubleValue {
	if x != nil {
		return x.NonnullDouble
	}
	return nil
}

func (x *ProtoTypes) GetNonnullFloat() *wrapperspb.FloatValue {
	if x != nil {
		return x.NonnullFloat
	}
	return nil
}

func (x *ProtoTypes) GetNonnullInt64() *wrapperspb.Int64Value {
	if x != nil {
		return x.NonnullInt64
	}
	return nil
}

func (x *ProtoTypes) GetNonnullUInt64() *wrapperspb.UInt64Value {
	if x != nil {
		return x.NonnullUInt64
	}
	return nil
}

func (x *ProtoTypes) GetNonnullInt32() *wrapperspb.Int32Value {
	if x != nil {
		return x.NonnullInt32
	}
	return nil
}

func (x *ProtoTypes) GetNonnullUInt32() *wrapperspb.UInt32Value {
	if x != nil {
		return x.NonnullUInt32
	}
	return nil
}

func (x *ProtoTypes) GetNonnullBool() *wrapperspb.BoolValue {
	if x != nil {
		return x.NonnullBool
	}
	return nil
}

func (x *ProtoTypes) GetNonnullString() *wrapperspb.StringValue {
	if x != nil {
		return x.NonnullString
	}
	return nil
}

func (x *ProtoTypes) GetNonnullBytes() *wrapperspb.BytesValue {
	if x != nil {
		return x.NonnullBytes
	}
	return nil
}

type StdTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NullableTimestamp *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=nullableTimestamp,proto3" json:"nullableTimestamp,omitempty"`
	NullableDuration  *durationpb.Duration    `protobuf:"bytes,2,opt,name=nullableDuration,proto3" json:"nullableDuration,omitempty"`
	NullableDouble    *wrapperspb.DoubleValue `protobuf:"bytes,3,opt,name=nullableDouble,proto3" json:"nullableDouble,omitempty"`
	NullableFloat     *wrapperspb.FloatValue  `protobuf:"bytes,4,opt,name=nullableFloat,proto3" json:"nullableFloat,omitempty"`
	NullableInt64     *wrapperspb.Int64Value  `protobuf:"bytes,5,opt,name=nullableInt64,proto3" json:"nullableInt64,omitempty"`
	NullableUInt64    *wrapperspb.UInt64Value `protobuf:"bytes,6,opt,name=nullableUInt64,proto3" json:"nullableUInt64,omitempty"`
	NullableInt32     *wrapperspb.Int32Value  `protobuf:"bytes,7,opt,name=nullableInt32,proto3" json:"nullableInt32,omitempty"`
	NullableUInt32    *wrapperspb.UInt32Value `protobuf:"bytes,8,opt,name=nullableUInt32,proto3" json:"nullableUInt32,omitempty"`
	NullableBool      *wrapperspb.BoolValue   `protobuf:"bytes,9,opt,name=nullableBool,proto3" json:"nullableBool,omitempty"`
	NullableString    *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=nullableString,proto3" json:"nullableString,omitempty"`
	NullableBytes     *wrapperspb.BytesValue  `protobuf:"bytes,11,opt,name=nullableBytes,proto3" json:"nullableBytes,omitempty"`
	Timestamp         *timestamppb.Timestamp  `protobuf:"bytes,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Duration          *durationpb.Duration    `protobuf:"bytes,13,opt,name=duration,proto3" json:"duration,omitempty"`
	NonnullDouble     *wrapperspb.DoubleValue `protobuf:"bytes,14,opt,name=nonnullDouble,proto3" json:"nonnullDouble,omitempty"`
	NonnullFloat      *wrapperspb.FloatValue  `protobuf:"bytes,15,opt,name=nonnullFloat,proto3" json:"nonnullFloat,omitempty"`
	NonnullInt64      *wrapperspb.Int64Value  `protobuf:"bytes,16,opt,name=nonnullInt64,proto3" json:"nonnullInt64,omitempty"`
	NonnullUInt64     *wrapperspb.UInt64Value `protobuf:"bytes,17,opt,name=nonnullUInt64,proto3" json:"nonnullUInt64,omitempty"`
	NonnullInt32      *wrapperspb.Int32Value  `protobuf:"bytes,18,opt,name=nonnullInt32,proto3" json:"nonnullInt32,omitempty"`
	NonnullUInt32     *wrapperspb.UInt32Value `protobuf:"bytes,19,opt,name=nonnullUInt32,proto3" json:"nonnullUInt32,omitempty"`
	NonnullBool       *wrapperspb.BoolValue   `protobuf:"bytes,20,opt,name=nonnullBool,proto3" json:"nonnullBool,omitempty"`
	NonnullString     *wrapperspb.StringValue `protobuf:"bytes,21,opt,name=nonnullString,proto3" json:"nonnullString,omitempty"`
	NonnullBytes      *wrapperspb.BytesValue  `protobuf:"bytes,22,opt,name=nonnullBytes,proto3" json:"nonnullBytes,omitempty"`
}

func (x *StdTypes) Reset() {
	*x = StdTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdTypes) ProtoMessage() {}

func (x *StdTypes) ProtoReflect() protoreflect.Message {
	mi := &file_third_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdTypes.ProtoReflect.Descriptor instead.
func (*StdTypes) Descriptor() ([]byte, []int) {
	return file_third_proto_rawDescGZIP(), []int{1}
}

func (x *StdTypes) GetNullableTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.NullableTimestamp
	}
	return nil
}

func (x *StdTypes) GetNullableDuration() *durationpb.Duration {
	if x != nil {
		return x.NullableDuration
	}
	return nil
}

func (x *StdTypes) GetNullableDouble() *wrapperspb.DoubleValue {
	if x != nil {
		return x.NullableDouble
	}
	return nil
}

func (x *StdTypes) GetNullableFloat() *wrapperspb.FloatValue {
	if x != nil {
		return x.NullableFloat
	}
	return nil
}

func (x *StdTypes) GetNullableInt64() *wrapperspb.Int64Value {
	if x != nil {
		return x.NullableInt64
	}
	return nil
}

func (x *StdTypes) GetNullableUInt64() *wrapperspb.UInt64Value {
	if x != nil {
		return x.NullableUInt64
	}
	return nil
}

func (x *StdTypes) GetNullableInt32() *wrapperspb.Int32Value {
	if x != nil {
		return x.NullableInt32
	}
	return nil
}

func (x *StdTypes) GetNullableUInt32() *wrapperspb.UInt32Value {
	if x != nil {
		return x.NullableUInt32
	}
	return nil
}

func (x *StdTypes) GetNullableBool() *wrapperspb.BoolValue {
	if x != nil {
		return x.NullableBool
	}
	return nil
}

func (x *StdTypes) GetNullableString() *wrapperspb.StringValue {
	if x != nil {
		return x.NullableString
	}
	return nil
}

func (x *StdTypes) GetNullableBytes() *wrapperspb.BytesValue {
	if x != nil {
		return x.NullableBytes
	}
	return nil
}

func (x *StdTypes) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StdTypes) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *StdTypes) GetNonnullDouble() *wrapperspb.DoubleValue {
	if x != nil {
		return x.NonnullDouble
	}
	return nil
}

func (x *StdTypes) GetNonnullFloat() *wrapperspb.FloatValue {
	if x != nil {
		return x.NonnullFloat
	}
	return nil
}

func (x *StdTypes) GetNonnullInt64() *wrapperspb.Int64Value {
	if x != nil {
		return x.NonnullInt64
	}
	return nil
}

func (x *StdTypes) GetNonnullUInt64() *wrapperspb.UInt64Value {
	if x != nil {
		return x.NonnullUInt64
	}
	return nil
}

func (x *StdTypes) GetNonnullInt32() *wrapperspb.Int32Value {
	if x != nil {
		return x.NonnullInt32
	}
	return nil
}

func (x *StdTypes) GetNonnullUInt32() *wrapperspb.UInt32Value {
	if x != nil {
		return x.NonnullUInt32
	}
	return nil
}

func (x *StdTypes) GetNonnullBool() *wrapperspb.BoolValue {
	if x != nil {
		return x.NonnullBool
	}
	return nil
}

func (x *StdTypes) GetNonnullString() *wrapperspb.StringValue {
	if x != nil {
		return x.NonnullString
	}
	return nil
}

func (x *StdTypes) GetNonnullBytes() *wrapperspb.BytesValue {
	if x != nil {
		return x.NonnullBytes
	}
	return nil
}

var File_third_proto protoreflect.FileDescriptor

var file_third_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x1a, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x0c, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x11, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0e, 0x6e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x12, 0x41, 0x0a, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x44, 0x0a, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x41, 0x0a, 0x0d,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x44, 0x0a, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x44, 0x0a, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x0d, 0x6e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3b,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x6e,
	0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c,
	0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x45, 0x0a, 0x0c,
	0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x55, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d,
	0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x45, 0x0a,
	0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x42,
	0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x6f,
	0x6f, 0x6c, 0x12, 0x48, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x6e,
	0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x0c,
	0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x3a, 0x04, 0xe8, 0xa1, 0x1f, 0x01, 0x22, 0xf2, 0x0c, 0x0a, 0x08, 0x53, 0x74,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x11, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x90,
	0xdf, 0x1f, 0x01, 0x52, 0x11, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0x98, 0xdf, 0x1f,
	0x01, 0x52, 0x10, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xa0, 0xdf, 0x1f, 0x01, 0x52,
	0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x47, 0x0a, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x04, 0xa0, 0xdf, 0x1f, 0x01, 0x52, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xa0, 0xdf,
	0x1f, 0x01, 0x52, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x4a, 0x0a, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xa0, 0xdf, 0x1f, 0x01, 0x52, 0x0e, 0x6e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x47, 0x0a,
	0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x04, 0xa0, 0xdf, 0x1f, 0x01, 0x52, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x4a, 0x0a, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xa0, 0xdf,
	0x1f, 0x01, 0x52, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x44, 0x0a, 0x0c, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f,
	0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xa0, 0xdf, 0x1f, 0x01, 0x52, 0x0c, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x4a, 0x0a, 0x0e, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04,
	0xa0, 0xdf, 0x1f, 0x01, 0x52, 0x0e, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x47, 0x0a, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x04, 0xa0, 0xdf, 0x1f, 0x01, 0x52, 0x0d,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x42, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x90, 0xdf,
	0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08,
	0x98, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xa0, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x12, 0x49, 0x0a, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x08, 0xa0, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x6e,
	0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x49, 0x0a, 0x0c, 0x6e,
	0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08,
	0xa0, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c,
	0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x4c, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c,
	0x6c, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xa0, 0xdf, 0x1f,
	0x01, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x55, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x12, 0x49, 0x0a, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xa0, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x4c, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xa0, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d,
	0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x46, 0x0a,
	0x0b, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08,
	0xa0, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c,
	0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x4c, 0x0a, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xa0, 0xdf, 0x1f, 0x01,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xa0, 0xdf, 0x1f, 0x01, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x0c, 0x6e, 0x6f, 0x6e, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x42, 0x32,
	0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0xb8, 0xe2, 0x1e, 0x01, 0xf8, 0xe1,
	0x1e, 0x01, 0xc0, 0xe2, 0x1e, 0x01, 0xd0, 0xe2, 0x1e, 0x00, 0xc8, 0xe2, 0x1e, 0x00, 0xe0, 0xe2,
	0x1e, 0x01, 0xa8, 0xe2, 0x1e, 0x01, 0xe0, 0xe1, 0x1e, 0x01, 0xf8, 0xe2, 0x1e, 0x00, 0x80, 0xe3,
	0x1e, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_third_proto_rawDescOnce sync.Once
	file_third_proto_rawDescData = file_third_proto_rawDesc
)

func file_third_proto_rawDescGZIP() []byte {
	file_third_proto_rawDescOnce.Do(func() {
		file_third_proto_rawDescData = protoimpl.X.CompressGZIP(file_third_proto_rawDescData)
	})
	return file_third_proto_rawDescData
}

var file_third_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_third_proto_goTypes = []interface{}{
	(*ProtoTypes)(nil),             // 0: example.third.ProtoTypes
	(*StdTypes)(nil),               // 1: example.third.StdTypes
	(*timestamppb.Timestamp)(nil),  // 2: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 3: google.protobuf.Duration
	(*wrapperspb.DoubleValue)(nil), // 4: google.protobuf.DoubleValue
	(*wrapperspb.FloatValue)(nil),  // 5: google.protobuf.FloatValue
	(*wrapperspb.Int64Value)(nil),  // 6: google.protobuf.Int64Value
	(*wrapperspb.UInt64Value)(nil), // 7: google.protobuf.UInt64Value
	(*wrapperspb.Int32Value)(nil),  // 8: google.protobuf.Int32Value
	(*wrapperspb.UInt32Value)(nil), // 9: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),   // 10: google.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil), // 11: google.protobuf.StringValue
	(*wrapperspb.BytesValue)(nil),  // 12: google.protobuf.BytesValue
}
var file_third_proto_depIdxs = []int32{
	2,  // 0: example.third.ProtoTypes.nullableTimestamp:type_name -> google.protobuf.Timestamp
	3,  // 1: example.third.ProtoTypes.nullableDuration:type_name -> google.protobuf.Duration
	4,  // 2: example.third.ProtoTypes.nullableDouble:type_name -> google.protobuf.DoubleValue
	5,  // 3: example.third.ProtoTypes.nullableFloat:type_name -> google.protobuf.FloatValue
	6,  // 4: example.third.ProtoTypes.nullableInt64:type_name -> google.protobuf.Int64Value
	7,  // 5: example.third.ProtoTypes.nullableUInt64:type_name -> google.protobuf.UInt64Value
	8,  // 6: example.third.ProtoTypes.nullableInt32:type_name -> google.protobuf.Int32Value
	9,  // 7: example.third.ProtoTypes.nullableUInt32:type_name -> google.protobuf.UInt32Value
	10, // 8: example.third.ProtoTypes.nullableBool:type_name -> google.protobuf.BoolValue
	11, // 9: example.third.ProtoTypes.nullableString:type_name -> google.protobuf.StringValue
	12, // 10: example.third.ProtoTypes.nullableBytes:type_name -> google.protobuf.BytesValue
	2,  // 11: example.third.ProtoTypes.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 12: example.third.ProtoTypes.duration:type_name -> google.protobuf.Duration
	4,  // 13: example.third.ProtoTypes.nonnullDouble:type_name -> google.protobuf.DoubleValue
	5,  // 14: example.third.ProtoTypes.nonnullFloat:type_name -> google.protobuf.FloatValue
	6,  // 15: example.third.ProtoTypes.nonnullInt64:type_name -> google.protobuf.Int64Value
	7,  // 16: example.third.ProtoTypes.nonnullUInt64:type_name -> google.protobuf.UInt64Value
	8,  // 17: example.third.ProtoTypes.nonnullInt32:type_name -> google.protobuf.Int32Value
	9,  // 18: example.third.ProtoTypes.nonnullUInt32:type_name -> google.protobuf.UInt32Value
	10, // 19: example.third.ProtoTypes.nonnullBool:type_name -> google.protobuf.BoolValue
	11, // 20: example.third.ProtoTypes.nonnullString:type_name -> google.protobuf.StringValue
	12, // 21: example.third.ProtoTypes.nonnullBytes:type_name -> google.protobuf.BytesValue
	2,  // 22: example.third.StdTypes.nullableTimestamp:type_name -> google.protobuf.Timestamp
	3,  // 23: example.third.StdTypes.nullableDuration:type_name -> google.protobuf.Duration
	4,  // 24: example.third.StdTypes.nullableDouble:type_name -> google.protobuf.DoubleValue
	5,  // 25: example.third.StdTypes.nullableFloat:type_name -> google.protobuf.FloatValue
	6,  // 26: example.third.StdTypes.nullableInt64:type_name -> google.protobuf.Int64Value
	7,  // 27: example.third.StdTypes.nullableUInt64:type_name -> google.protobuf.UInt64Value
	8,  // 28: example.third.StdTypes.nullableInt32:type_name -> google.protobuf.Int32Value
	9,  // 29: example.third.StdTypes.nullableUInt32:type_name -> google.protobuf.UInt32Value
	10, // 30: example.third.StdTypes.nullableBool:type_name -> google.protobuf.BoolValue
	11, // 31: example.third.StdTypes.nullableString:type_name -> google.protobuf.StringValue
	12, // 32: example.third.StdTypes.nullableBytes:type_name -> google.protobuf.BytesValue
	2,  // 33: example.third.StdTypes.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 34: example.third.StdTypes.duration:type_name -> google.protobuf.Duration
	4,  // 35: example.third.StdTypes.nonnullDouble:type_name -> google.protobuf.DoubleValue
	5,  // 36: example.third.StdTypes.nonnullFloat:type_name -> google.protobuf.FloatValue
	6,  // 37: example.third.StdTypes.nonnullInt64:type_name -> google.protobuf.Int64Value
	7,  // 38: example.third.StdTypes.nonnullUInt64:type_name -> google.protobuf.UInt64Value
	8,  // 39: example.third.StdTypes.nonnullInt32:type_name -> google.protobuf.Int32Value
	9,  // 40: example.third.StdTypes.nonnullUInt32:type_name -> google.protobuf.UInt32Value
	10, // 41: example.third.StdTypes.nonnullBool:type_name -> google.protobuf.BoolValue
	11, // 42: example.third.StdTypes.nonnullString:type_name -> google.protobuf.StringValue
	12, // 43: example.third.StdTypes.nonnullBytes:type_name -> google.protobuf.BytesValue
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_third_proto_init() }
func file_third_proto_init() {
	if File_third_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_third_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_third_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_third_proto_goTypes,
		DependencyIndexes: file_third_proto_depIdxs,
		MessageInfos:      file_third_proto_msgTypes,
	}.Build()
	File_third_proto = out.File
	file_third_proto_rawDesc = nil
	file_third_proto_goTypes = nil
	file_third_proto_depIdxs = nil
}
